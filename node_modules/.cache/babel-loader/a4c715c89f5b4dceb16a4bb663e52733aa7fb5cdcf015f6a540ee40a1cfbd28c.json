{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Shiva project\\\\my-react-firebase-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInAnonymously, signInWithCustomToken, onAuthStateChanged, GoogleAuthProvider, signInWithPopup, signOut } from 'firebase/auth';\nimport { getFirestore, doc, addDoc, setDoc, deleteDoc, onSnapshot, collection, query, where, getDocs } from 'firebase/firestore';\n\n// Main App component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to manage the current view: 'dashboard' or 'cipherCreator'\n  const [currentView, setCurrentView] = useState('dashboard');\n  // State to store Firebase authentication and Firestore instances\n  const [db, setDb] = useState(null);\n  const [auth, setAuth] = useState(null);\n  // State to store the current user's ID (Firebase Auth UID)\n  const [userId, setUserId] = useState(null);\n  // State to indicate if authentication is ready\n  const [isAuthReady, setIsAuthReady] = useState(false);\n  // State for displaying messages to the user (e.g., login errors)\n  const [appMessage, setAppMessage] = useState('');\n  // State to manage if a sign-in process is currently active to prevent multiple popups\n  const [isSigningIn, setIsSigningIn] = useState(false);\n\n  // Initialize Firebase and set up authentication listener\n  useEffect(() => {\n    try {\n      const firebaseConfig = {\n        apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n        authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n        projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n        storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n        messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n        appId: process.env.REACT_APP_FIREBASE_APP_ID\n      };\n      const appId = process.env.REACT_APP_FIREBASE_APP_ID || 'default-app-id';\n      const app = initializeApp(firebaseConfig);\n      const firestoreDb = getFirestore(app);\n      const firebaseAuth = getAuth(app);\n      setDb(firestoreDb);\n      setAuth(firebaseAuth);\n\n      // Attempt initial sign-in: first with custom token (for Canvas), then anonymously\n      const signInInitial = async () => {\n        try {\n          await signInAnonymously(firebaseAuth);\n        } catch (error) {\n          console.error(\"Firebase anonymous sign-in error:\", error);\n        }\n      };\n      signInInitial();\n\n      // Set up a listener for authentication state changes\n      const unsubscribe = onAuthStateChanged(firebaseAuth, user => {\n        if (user) {\n          setUserId(user.uid);\n          console.log(\"User signed in:\", user.uid);\n        } else {\n          setUserId(null);\n          console.log(\"User signed out.\");\n        }\n        setIsAuthReady(true); // Mark authentication as ready after initial check\n      });\n      return () => unsubscribe(); // Cleanup Firebase Auth listener\n    } catch (error) {\n      console.error(\"Error initializing Firebase:\", error);\n      setAppMessage(\"Error initializing Firebase. Please check your console.\");\n      setIsAuthReady(true);\n    }\n  }, []); // Runs only once on mount\n\n  // Function to handle Google Sign-In\n  const handleGoogleSignIn = async () => {\n    if (!auth || isSigningIn) {\n      if (isSigningIn) {\n        setAppMessage(\"Sign-in process already in progress. Please wait or try again.\");\n      } else {\n        setAppMessage(\"Firebase Auth not initialized. Please try again.\");\n      }\n      return;\n    }\n    setIsSigningIn(true);\n    setAppMessage('');\n    const provider = new GoogleAuthProvider();\n    try {\n      await signInWithPopup(auth, provider);\n      setAppMessage(\"Successfully signed in with Google!\");\n    } catch (error) {\n      console.error(\"Google Sign-In error:\", error);\n      if (error.code === 'auth/unauthorized-domain') {\n        setAppMessage(`Google Sign-In failed: The domain \"${window.location.hostname}\" is not authorized in your Firebase project. Please add this exact domain in Firebase Console > Authentication > Settings > Authorized domains.`);\n      } else if (error.code === 'auth/cancelled-popup-request') {\n        setAppMessage(\"Sign-in cancelled: You might have closed the popup or clicked the button multiple times. Please click 'Sign in with Google' once.\");\n      } else if (error.code === 'auth/popup-blocked') {\n        setAppMessage(\"Sign-in failed: Popup blocked by your browser. Please allow popups for this site and try again.\");\n      } else {\n        setAppMessage(`Google Sign-In failed: ${error.message}`);\n      }\n    } finally {\n      setIsSigningIn(false);\n    }\n  };\n\n  // Function to handle user Logout\n  const handleSignOut = async () => {\n    if (!auth) return;\n    try {\n      await signOut(auth);\n      setAppMessage(\"Signed out successfully.\");\n      setCurrentView('dashboard');\n    } catch (error) {\n      console.error(\"Sign-out error:\", error);\n      setAppMessage(`Sign-out failed: ${error.message}`);\n    }\n  };\n\n  // Render loading state until Firebase is ready\n  if (!isAuthReady) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl text-gray-700\",\n        children: \"Loading authentication...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Main application layout\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 font-inter\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-white shadow-sm p-4 flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-800\",\n        children: \"Cipher Creator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: userId ?\n        /*#__PURE__*/\n        // Show user ID and Logout button if user is logged in\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600 text-sm\",\n            children: [\"User ID: \", userId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSignOut,\n            className: \"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition-colors\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // Show Sign in with Google button if user is not logged in\n        _jsxDEV(\"button\", {\n          onClick: handleGoogleSignIn,\n          disabled: isSigningIn,\n          className: `px-4 py-2 bg-blue-600 text-white rounded-md transition-colors flex items-center space-x-2 ${isSigningIn ? 'opacity-50 cursor-not-allowed' : 'hover:bg-blue-700'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-5 h-5\",\n            fill: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M22.675 12.0007c0-.623-.054-1.226-.156-1.812h-10.43v3.571h5.908c-.26 1.385-1.04 2.56-2.227 3.354v2.308h2.977c1.748-1.61 2.756-3.987 2.756-6.421z\",\n              fill: \"#4285F4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12.245 23.0007c3.153 0 5.8-1.04 7.733-2.834l-2.977-2.308c-.822.544-1.874.869-2.756.869-2.133 0-3.931-1.432-4.588-3.35h-3.085v2.382c1.026 2.02 3.197 3.475 5.673 3.475z\",\n              fill: \"#34A853\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M7.657 14.0007c-.206-.544-.323-1.12-.323-1.724s.117-1.18.323-1.724v-2.382h-3.085c-.68 1.34-1.068 2.87-1.068 4.106s.388 2.766 1.068 4.106l3.085-2.382z\",\n              fill: \"#FBBC05\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12.245 5.0007c1.728 0 3.297.66 4.516 1.764l2.648-2.648c-1.83-1.706-4.256-2.816-7.164-2.816-2.476 0-4.647 1.455-5.673 3.475l3.085 2.382c.657-1.918 2.455-3.35 4.588-3.35z\",\n              fill: \"#EA4335\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: isSigningIn ? 'Signing In...' : 'Sign in with Google'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), appMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded relative mx-auto mt-4 max-w-4xl\",\n      role: \"alert\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"block sm:inline\",\n        children: appMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mx-auto p-6\",\n      children: userId ?\n      // If user is logged in, show Dashboard or CipherCreator\n      currentView === 'dashboard' ? /*#__PURE__*/_jsxDEV(Dashboard, {\n        setCurrentView: setCurrentView,\n        userId: userId,\n        db: db\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(CipherCreator, {\n        setCurrentView: setCurrentView,\n        userId: userId,\n        db: db\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this) :\n      /*#__PURE__*/\n      // If user is not logged in, show welcome message and Google Sign-In button\n      _jsxDEV(\"div\", {\n        className: \"bg-white p-8 rounded-lg shadow-md max-w-md mx-auto mt-10 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4 text-gray-800\",\n          children: \"Welcome to Cipher Creator!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-6\",\n          children: \"Please sign in with your Google account to create and manage your custom ciphers.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGoogleSignIn,\n          disabled: isSigningIn,\n          className: `px-6 py-3 bg-blue-600 text-white rounded-md text-lg font-medium transition-colors flex items-center justify-center space-x-3 mx-auto shadow-lg ${isSigningIn ? 'opacity-50 cursor-not-allowed' : 'hover:bg-blue-700'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-6 h-6\",\n            fill: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M22.675 12.0007c0-.623-.054-1.226-.156-1.812h-10.43v3.571h5.908c-.26 1.385-1.04 2.56-2.227 3.354v2.308h2.977c1.748-1.61 2.756-3.987 2.756-6.421z\",\n              fill: \"#4285F4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12.245 23.0007c3.153 0 5.8-1.04 7.733-2.834l-2.977-2.308c-.822.544-1.874.869-2.756.869-2.133 0-3.931-1.432-4.588-3.35h-3.085v2.382c1.026 2.02 3.197 3.475 5.673 3.475z\",\n              fill: \"#34A853\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M7.657 14.0007c-.206-.544-.323-1.12-.323-1.724s.117-1.18.323-1.724v-2.382h-3.085c-.68 1.34-1.068 2.87-1.068 4.106s.388 2.766 1.068 4.106l3.085-2.382z\",\n              fill: \"#FBBC05\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12.245 5.0007c1.728 0 3.297.66 4.516 1.764l2.648-2.648c-1.83-1.706-4.256-2.816-7.164-2.816-2.476 0-4.647 1.455-5.673 3.475l3.085 2.382c.657-1.918 2.455-3.35 4.588-3.35z\",\n              fill: \"#EA4335\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: isSigningIn ? 'Signing In...' : 'Sign in with Google'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n// Dashboard Component: Displays a list of user's saved ciphers\n_s(App, \"Ba/KaaSuYmq/sVW59rVkWxzpGjU=\");\n_c = App;\nfunction Dashboard({\n  setCurrentView,\n  userId,\n  db\n}) {\n  _s2();\n  const [ciphers, setCiphers] = useState([]);\n  const [message, setMessage] = useState(''); // For user messages like \"Cipher saved!\" or \"Cipher deleted!\"\n\n  // States for decoding messages (moved from CipherCreator)\n  const [cipherTextMessage, setCipherTextMessage] = useState('');\n  const [decodeKey, setDecodeKey] = useState('');\n  const [decodedMessage, setDecodedMessage] = useState('');\n  const [decodeMessage, setDecodeMessage] = useState(''); // Separate message for decode section\n\n  // Helper function to check if a string contains only unique characters\n  const hasUniqueChars = str => {\n    return new Set(str.split('')).size === str.length;\n  };\n\n  // Function to generate a substitution map from a keyword (moved from CipherCreator)\n  const generateSubstitutionMapFromKeyword = keyword => {\n    const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    let uniqueChars = '';\n    const lowerKeyword = keyword.toLowerCase();\n    for (let i = 0; i < lowerKeyword.length; i++) {\n      if (alphabet.includes(lowerKeyword[i]) && !uniqueChars.includes(lowerKeyword[i])) {\n        uniqueChars += lowerKeyword[i];\n      }\n    }\n    for (let i = 0; i < alphabet.length; i++) {\n      if (!uniqueChars.includes(alphabet[i])) {\n        uniqueChars += alphabet[i];\n      }\n    }\n    return {\n      inputMap: alphabet,\n      outputMap: uniqueChars\n    };\n  };\n\n  // Linear Shift (Caesar Cipher) decoding logic (moved from CipherCreator)\n  const linearShiftDecode = (text, shift) => {\n    let result = '';\n    for (let i = 0; i < text.length; i++) {\n      const char = text[i];\n      const charCode = char.toLowerCase().charCodeAt(0);\n      if (charCode >= 97 && charCode <= 122) {\n        const isUpperCase = char === char.toUpperCase();\n        let shiftedCharCode = (charCode - 97 - shift + 26 * 2) % 26 + 97; // +26*2 to handle negative results\n        result += isUpperCase ? String.fromCharCode(shiftedCharCode).toUpperCase() : String.fromCharCode(shiftedCharCode);\n      } else {\n        result += char;\n      }\n    }\n    return result;\n  };\n\n  // Substitution Cipher decoding logic (moved from CipherCreator)\n  const substitutionDecode = (text, inputMap, outputMap) => {\n    if (inputMap.length !== outputMap.length || !hasUniqueChars(inputMap) || !hasUniqueChars(outputMap)) {\n      setDecodeMessage(\"Substitution map is invalid for decoding. Input and output maps must have the same length and contain only unique characters.\");\n      return \"\";\n    }\n    const inputMapLower = inputMap.toLowerCase();\n    const outputMapLower = outputMap.toLowerCase();\n    let result = '';\n    for (let i = 0; i < text.length; i++) {\n      const char = text[i];\n      const charLower = char.toLowerCase();\n      const index = outputMapLower.indexOf(charLower);\n      if (index !== -1) {\n        const originalChar = inputMapLower[index];\n        result += char === char.toUpperCase() ? originalChar.toUpperCase() : originalChar;\n      } else {\n        result += char;\n      }\n    }\n    return result;\n  };\n\n  // Shift + Substitution Cipher decoding logic (moved from CipherCreator)\n  const shiftSubstitutionDecode = (text, shift, inputMap, outputMap) => {\n    const deSubstitutedText = substitutionDecode(text, inputMap, outputMap);\n    if (!deSubstitutedText) return \"\"; // Propagate error from substitutionDecode\n    const deShiftedText = linearShiftDecode(deSubstitutedText, shift);\n    return deShiftedText;\n  };\n\n  // Handles decoding a message based on the provided key and selected cipher type\n  const handleDecode = () => {\n    if (cipherTextMessage.trim() === '' || decodeKey.trim() === '') {\n      setDecodeMessage('Please enter both the encoded message and the key to decode.');\n      return;\n    }\n    setDecodeMessage(''); // Clear previous messages\n    let result = '';\n    let usedInputMap = '';\n    let usedOutputMap = '';\n    let cipherTypeForDecode = ''; // To determine which decode logic to use\n\n    try {\n      const parsedKey = JSON.parse(decodeKey);\n      cipherTypeForDecode = parsedKey.type;\n      if (parsedKey.type === 'linearShift') {\n        result = linearShiftDecode(cipherTextMessage, parseInt(parsedKey.shiftAmount) || 0);\n      } else if (parsedKey.type === 'substitution' || parsedKey.type === 'shiftSubstitution') {\n        if (parsedKey.keyword) {\n          const generatedMaps = generateSubstitutionMapFromKeyword(parsedKey.keyword);\n          usedInputMap = generatedMaps.inputMap;\n          usedOutputMap = generatedMaps.outputMap;\n        } else if (parsedKey.inputMap && parsedKey.outputMap) {\n          usedInputMap = parsedKey.inputMap;\n          usedOutputMap = parsedKey.outputMap;\n        } else {\n          setDecodeMessage(\"Invalid decode key for substitution/shift+substitution. Missing keyword or map data.\");\n          return;\n        }\n        if (parsedKey.type === 'substitution') {\n          result = substitutionDecode(cipherTextMessage, usedInputMap, usedOutputMap);\n        } else {\n          // shiftSubstitution\n          result = shiftSubstitutionDecode(cipherTextMessage, parseInt(parsedKey.shiftAmount) || 0, usedInputMap, usedOutputMap);\n        }\n      } else {\n        setDecodeMessage(\"Invalid decode key format or type. Key must be a valid JSON object matching the cipher type.\");\n        return;\n      }\n    } catch (e) {\n      // If JSON parsing fails, try to interpret the key as a simple number for linear shift\n      const numKey = parseInt(decodeKey);\n      // If a simple number is provided, assume linear shift\n      if (!isNaN(numKey)) {\n        result = linearShiftDecode(cipherTextMessage, numKey);\n      } else {\n        setDecodeMessage(\"Invalid decode key. Ensure it matches the cipher type (e.g., a number for Linear Shift, or a full JSON for Substitution/Shift+Substitution).\");\n        return;\n      }\n    }\n    setDecodedMessage(result);\n  };\n\n  // Effect hook to fetch ciphers from Firestore in real-time\n  useEffect(() => {\n    // Only proceed if db and userId are available\n    if (!db || !userId) return;\n\n    // Define the collection path for private user data in Firestore\n    // This path adheres to Firebase security rules for user-specific data: /artifacts/{appId}/users/{userId}/ciphers\n    const appId = process.env.REACT_APP_FIREBASE_APP_ID || 'default-app-id';\n    const ciphersCollectionRef = collection(db, `artifacts/${appId}/users/${userId}/ciphers`);\n\n    // Set up a real-time listener using onSnapshot\n    const unsubscribe = onSnapshot(ciphersCollectionRef, snapshot => {\n      const fetchedCiphers = snapshot.docs.map(doc => ({\n        id: doc.id,\n        // Document ID\n        ...doc.data() // All other fields in the document\n      }));\n      setCiphers(fetchedCiphers); // Update state with fetched ciphers\n      console.log(\"Fetched ciphers:\", fetchedCiphers);\n    }, error => {\n      console.error(\"Error fetching ciphers:\", error);\n      setMessage(\"Error loading ciphers. Please try refreshing.\");\n    });\n\n    // Cleanup function: unsubscribe from the real-time listener when the component unmounts\n    return () => unsubscribe();\n  }, [db, userId]); // Effect re-runs if db or userId changes\n\n  // Function to handle deleting a cipher from Firestore\n  const handleDeleteCipher = async cipherId => {\n    if (!db || !userId) return; // Ensure db and userId are available\n    try {\n      const appId = process.env.REACT_APP_FIREBASE_APP_ID || 'default-app-id';\n\n      // Delete the specific document from the user's ciphers collection\n      await deleteDoc(doc(db, `artifacts/${appId}/users/${userId}/ciphers`, cipherId));\n      setMessage('Cipher deleted successfully!');\n      setTimeout(() => setMessage(''), 3000); // Clear the message after 3 seconds\n    } catch (error) {\n      console.error(\"Error deleting cipher:\", error);\n      setMessage('Failed to delete cipher. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-8 rounded-lg shadow-md max-w-4xl mx-auto\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-semibold mb-6 text-gray-800 text-center\",\n      children: \"Your Ciphers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), message &&\n    /*#__PURE__*/\n    // Display messages to the user (for general dashboard actions)\n    _jsxDEV(\"div\", {\n      className: \"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4\",\n      role: \"alert\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"block sm:inline\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentView('cipherCreator'),\n      className: \"w-full bg-blue-600 text-white py-3 rounded-md text-lg font-medium hover:bg-blue-700 transition-colors shadow-lg mb-8\",\n      children: \"Create New Cipher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), ciphers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-500 text-lg mb-8\",\n      children: \"You haven't created any ciphers yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4 mb-8\",\n      children: ciphers.map(cipher => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center bg-gray-50 p-4 rounded-md border border-gray-200 shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-medium text-gray-800\",\n            children: cipher.name || 'Unnamed Cipher'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 text-sm\",\n            children: [\"Type: \", cipher.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log(`Using cipher: ${cipher.name}`);\n              // Ideally, this would load the cipher's configuration into the CipherCreator page\n              setCurrentView('cipherCreator');\n            },\n            className: \"px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 transition-colors text-sm\",\n            children: \"Use/Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteCipher(cipher.id),\n            className: \"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition-colors text-sm\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 15\n        }, this)]\n      }, cipher.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 border border-gray-200 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-medium mb-4 text-gray-700\",\n        children: \"Decode Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), decodeMessage &&\n      /*#__PURE__*/\n      // Display messages specific to decode section\n      _jsxDEV(\"div\", {\n        className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\",\n        role: \"alert\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"block sm:inline\",\n          children: decodeMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cipherTextMessage\",\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Ciphered Message:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"cipherTextMessage\",\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline h-32 resize-y\",\n            placeholder: \"Paste the encoded message here...\",\n            value: cipherTextMessage,\n            onChange: e => setCipherTextMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"decodeKey\",\n            className: \"block text-gray-700 text-sm font-bold mb-2 mt-4\",\n            children: \"Key:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"decodeKey\",\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            placeholder: \"Paste the key provided by your friend (e.g., 3 or {'type':'substitution', 'keyword':'SECRET'})\",\n            value: decodeKey,\n            onChange: e => setDecodeKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDecode,\n            className: \"mt-4 w-full bg-green-600 text-white py-2 rounded-md font-medium hover:bg-green-700 transition-colors shadow-md\",\n            children: \"Decode Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"decodedMessage\",\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Decoded Message:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"decodedMessage\",\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline h-32 bg-gray-50 resize-y\",\n            readOnly: true,\n            value: decodedMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 5\n  }, this);\n}\n\n// Cipher Creator Component: Allows users to define, encode, and decode ciphers\n_s2(Dashboard, \"ee/3AJnoLyaT85mJ6mCZgkb5blo=\");\n_c2 = Dashboard;\nfunction CipherCreator({\n  setCurrentView,\n  userId,\n  db\n}) {\n  _s3();\n  // State for defining the cipher\n  const [cipherName, setCipherName] = useState('');\n  const [cipherType, setCipherType] = useState('linearShift'); // Default cipher type\n  const [shiftAmount, setShiftAmount] = useState(3); // Default shift for linear shift\n  const [substitutionMethod, setSubstitutionMethod] = useState('manual'); // 'manual' or 'keyword'\n  const [substitutionKeyword, setSubstitutionKeyword] = useState('secret'); // Default keyword\n  const [substitutionMap, setSubstitutionMap] = useState('abcdefghijklmnopqrstuvwxyz'); // Default input map for manual substitution\n  const [substitutionMapOutput, setSubstitutionMapOutput] = useState('zyxwuvtsrqponmlkjihgfedcba'); // Default output map for manual substitution\n\n  // State for encoding messages (decode states removed)\n  const [plainTextMessage, setPlainTextMessage] = useState('');\n  const [encodedMessage, setEncodedMessage] = useState('');\n  const [message, setMessage] = useState(''); // General messages to the user (e.g., validation errors)\n\n  // --- Cipher Logic Functions ---\n\n  // Helper function to check if a string contains only unique characters\n  const hasUniqueChars = str => {\n    return new Set(str.split('')).size === str.length;\n  };\n\n  // Function to generate a substitution map from a keyword\n  const generateSubstitutionMapFromKeyword = keyword => {\n    const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    let uniqueChars = '';\n    const lowerKeyword = keyword.toLowerCase();\n\n    // Add unique characters from the keyword first\n    for (let i = 0; i < lowerKeyword.length; i++) {\n      if (alphabet.includes(lowerKeyword[i]) && !uniqueChars.includes(lowerKeyword[i])) {\n        uniqueChars += lowerKeyword[i];\n      }\n    }\n\n    // Add remaining unique characters from the alphabet\n    for (let i = 0; i < alphabet.length; i++) {\n      if (!uniqueChars.includes(alphabet[i])) {\n        uniqueChars += alphabet[i];\n      }\n    }\n\n    // The input map is the standard alphabet\n    const inputMap = alphabet;\n    // The output map is the generated uniqueChars string\n    const outputMap = uniqueChars;\n    return {\n      inputMap,\n      outputMap\n    };\n  };\n\n  // Linear Shift (Caesar Cipher) encoding logic\n  const linearShiftEncode = (text, shift) => {\n    let result = '';\n    for (let i = 0; i < text.length; i++) {\n      const char = text[i];\n      const charCode = char.toLowerCase().charCodeAt(0);\n      // Only shift lowercase letters (ASCII 97-122), preserve original case\n      if (charCode >= 97 && charCode <= 122) {\n        const isUpperCase = char === char.toUpperCase();\n        let shiftedCharCode = (charCode - 97 + shift) % 26 + 97;\n        result += isUpperCase ? String.fromCharCode(shiftedCharCode).toUpperCase() : String.fromCharCode(shiftedCharCode);\n      } else {\n        result += char; // Keep non-alphabetic characters as is\n      }\n    }\n    return result;\n  };\n\n  // Substitution Cipher encoding logic\n  const substitutionEncode = (text, inputMap, outputMap) => {\n    // Validates substitution maps\n    if (inputMap.length !== outputMap.length || !hasUniqueChars(inputMap) || !hasUniqueChars(outputMap)) {\n      setMessage(\"Substitution map is invalid. Input and output maps must have the same length and contain only unique characters.\");\n      return \"\";\n    }\n    const inputMapLower = inputMap.toLowerCase();\n    const outputMapLower = outputMap.toLowerCase();\n    let result = '';\n    for (let i = 0; i < text.length; i++) {\n      const char = text[i];\n      const charLower = char.toLowerCase();\n      const index = inputMapLower.indexOf(charLower); // Find character in input map\n\n      if (index !== -1) {\n        // If found, substitute with corresponding character from output map, preserving original case\n        const substitutedChar = outputMapLower[index];\n        result += char === char.toUpperCase() ? substitutedChar.toUpperCase() : substitutedChar;\n      } else {\n        result += char; // Keep character as is if not in map\n      }\n    }\n    return result;\n  };\n\n  // Shift + Substitution Cipher encoding logic (combines both)\n  const shiftSubstitutionEncode = (text, shift, inputMap, outputMap) => {\n    // 1. Apply Linear Shift first\n    const shiftedText = linearShiftEncode(text, shift);\n    // 2. Then apply Substitution to the shifted text\n    const substitutedText = substitutionEncode(shiftedText, inputMap, outputMap);\n    return substitutedText;\n  };\n\n  // --- Event Handlers ---\n\n  // Handles encoding a message based on the selected cipher type\n  const handleEncode = () => {\n    if (plainTextMessage.trim() === '') {\n      setMessage('Please enter a message to encode.');\n      return;\n    }\n    setMessage(''); // Clear previous messages\n    let result = '';\n    let currentInputMap = substitutionMap;\n    let currentOutputMap = substitutionMapOutput;\n\n    // If keyword-based substitution, generate maps from keyword\n    if ((cipherType === 'substitution' || cipherType === 'shiftSubstitution') && substitutionMethod === 'keyword') {\n      if (substitutionKeyword.trim() === '') {\n        setMessage('Please enter a keyword for substitution.');\n        return;\n      }\n      const generatedMaps = generateSubstitutionMapFromKeyword(substitutionKeyword);\n      currentInputMap = generatedMaps.inputMap;\n      currentOutputMap = generatedMaps.outputMap;\n    }\n    if (cipherType === 'linearShift') {\n      result = linearShiftEncode(plainTextMessage, parseInt(shiftAmount) || 0);\n    } else if (cipherType === 'substitution') {\n      result = substitutionEncode(plainTextMessage, currentInputMap, currentOutputMap);\n    } else if (cipherType === 'shiftSubstitution') {\n      result = shiftSubstitutionEncode(plainTextMessage, parseInt(shiftAmount) || 0, currentInputMap, currentOutputMap);\n    }\n    setEncodedMessage(result); // Update the encoded message state\n  };\n\n  // Handles saving the current cipher definition to Firestore\n  const handleSaveCipher = async () => {\n    // Ensure Firebase and user are ready for saving\n    if (!db || !userId) {\n      setMessage(\"Authentication not ready or user not logged in. Cannot save cipher.\");\n      return;\n    }\n    if (cipherName.trim() === '') {\n      setMessage(\"Please give your cipher a name before saving.\");\n      return;\n    }\n\n    // Prepare cipher data object based on the selected cipher type\n    const cipherData = {\n      name: cipherName,\n      type: cipherType,\n      createdAt: new Date(),\n      // Timestamp for when the cipher was created\n      userId: userId // Store the user ID to link cipher to the user\n    };\n    if (cipherType === 'linearShift') {\n      cipherData.shiftAmount = parseInt(shiftAmount) || 0;\n    } else if (cipherType === 'substitution' || cipherType === 'shiftSubstitution') {\n      cipherData.substitutionMethod = substitutionMethod; // Save the method used\n\n      if (substitutionMethod === 'keyword') {\n        if (substitutionKeyword.trim() === '') {\n          setMessage('Please enter a keyword for substitution.');\n          return;\n        }\n        cipherData.keyword = substitutionKeyword; // Save the keyword\n      } else {\n        // manual\n        // Validate manual substitution maps\n        if (substitutionMap.length === 0 || substitutionMap.length !== substitutionMapOutput.length || !hasUniqueChars(substitutionMap) || !hasUniqueChars(substitutionMapOutput)) {\n          setMessage(\"Manual Substitution map is invalid. Input and output maps must have the same length and contain only unique characters.\");\n          return;\n        }\n        cipherData.inputMap = substitutionMap;\n        cipherData.outputMap = substitutionMapOutput;\n      }\n      if (cipherType === 'shiftSubstitution') {\n        cipherData.shiftAmount = parseInt(shiftAmount) || 0;\n      }\n    }\n    try {\n      // Get the app ID for the Firestore path\n      const appId = process.env.REACT_APP_FIREBASE_APP_ID || 'default-app-id';\n\n      // Add the cipher data as a new document to the user's specific collection in Firestore\n      const docRef = await addDoc(collection(db, `artifacts/${appId}/users/${userId}/ciphers`), cipherData);\n      setMessage(`Cipher \"${cipherName}\" saved successfully with ID: ${docRef.id}`);\n      setCipherName(''); // Clear the cipher name input field after saving\n      setTimeout(() => setMessage(''), 3000); // Clear the message after 3 seconds\n    } catch (error) {\n      console.error(\"Error saving cipher:\", error);\n      setMessage(\"Failed to save cipher. Please check your internet connection or Firebase rules.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-8 rounded-lg shadow-md max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-semibold mb-6 text-gray-800 text-center\",\n      children: \"Cipher Creator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 7\n    }, this), message &&\n    /*#__PURE__*/\n    // Display general messages/errors to the user\n    _jsxDEV(\"div\", {\n      className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\",\n      role: \"alert\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"block sm:inline\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentView('dashboard'),\n      className: \"px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors mb-6\",\n      children: \"\\u2190 Back to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 p-6 border border-gray-200 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-medium mb-4 text-gray-700\",\n        children: \"Define Your Cipher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cipherName\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Cipher Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"cipherName\",\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          placeholder: \"e.g., My Secret Shift\",\n          value: cipherName,\n          onChange: e => setCipherName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cipherType\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Cipher Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"cipherType\",\n          className: \"shadow border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          value: cipherType,\n          onChange: e => setCipherType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"linearShift\",\n            children: \"Linear Shift (Caesar)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"substitution\",\n            children: \"Substitution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"shiftSubstitution\",\n            children: \"Shift + Substitution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 9\n      }, this), (cipherType === 'linearShift' || cipherType === 'shiftSubstitution') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"shiftAmount\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Shift Amount (0-25):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"shiftAmount\",\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          min: \"0\",\n          max: \"25\",\n          value: shiftAmount,\n          onChange: e => {\n            const value = e.target.value;\n            // Allow empty string for clearing input, otherwise parse to int or default to 0\n            setShiftAmount(value === '' ? '' : parseInt(value) || 0);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500 mt-1\",\n          children: \"e.g., 3 for a Caesar cipher (A becomes D)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 11\n      }, this), (cipherType === 'substitution' || cipherType === 'shiftSubstitution') && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Substitution Method:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"inline-flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                className: \"form-radio\",\n                name: \"substitutionMethod\",\n                value: \"manual\",\n                checked: substitutionMethod === 'manual',\n                onChange: () => setSubstitutionMethod('manual')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-gray-700\",\n                children: \"Manual Map\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"inline-flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                className: \"form-radio\",\n                name: \"substitutionMethod\",\n                value: \"keyword\",\n                checked: substitutionMethod === 'keyword',\n                onChange: () => setSubstitutionMethod('keyword')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-gray-700\",\n                children: \"Keyword Based\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 793,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 784,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 13\n        }, this), substitutionMethod === 'manual' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"substitutionMapInput\",\n              className: \"block text-gray-700 text-sm font-bold mb-2\",\n              children: \"Input Alphabet (any unique characters):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"substitutionMapInput\",\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              value: substitutionMap,\n              onChange: e => setSubstitutionMap(e.target.value),\n              placeholder: \"e.g., abcdefghijklmnopqrstuvwxyz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 mt-1\",\n              children: \"Paste any unique characters to define your input alphabet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"substitutionMapOutput\",\n              className: \"block text-gray-700 text-sm font-bold mb-2\",\n              children: \"Output Alphabet (unique characters, corresponding to input):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"substitutionMapOutput\",\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              value: substitutionMapOutput,\n              onChange: e => setSubstitutionMapOutput(e.target.value),\n              placeholder: \"e.g., zyxwvutsrqponmlkjihgfedcba\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 mt-1\",\n              children: \"Paste unique characters that map one-to-one with the input alphabet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // Keyword Based\n        _jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"substitutionKeyword\",\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Substitution Keyword:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"substitutionKeyword\",\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            value: substitutionKeyword,\n            onChange: e => setSubstitutionKeyword(e.target.value),\n            placeholder: \"e.g., SECRETWORD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mt-1\",\n            children: \"A keyword will be used to generate the substitution alphabet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveCipher,\n        className: \"w-full bg-purple-600 text-white py-2 rounded-md font-medium hover:bg-purple-700 transition-colors shadow-md\",\n        children: \"Save Cipher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 p-6 border border-gray-200 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-medium mb-4 text-gray-700\",\n        children: \"Encode Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"plainTextMessage\",\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Plain English Message:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"plainTextMessage\",\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline h-32 resize-y\",\n            placeholder: \"Type your message here...\",\n            value: plainTextMessage,\n            onChange: e => setPlainTextMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEncode,\n            className: \"mt-4 w-full bg-blue-600 text-white py-2 rounded-md font-medium hover:bg-blue-700 transition-colors shadow-md\",\n            children: \"Encode Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"encodedMessage\",\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Encoded Message:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"encodedMessage\",\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline h-32 bg-gray-50 resize-y\",\n            readOnly: true,\n            value: encodedMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 13\n          }, this), encodedMessage && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              // Copy encoded message to clipboard\n              const el = document.createElement('textarea');\n              el.value = encodedMessage;\n              document.body.appendChild(el);\n              el.select();\n              document.execCommand('copy'); // Deprecated but widely supported for iframes\n              document.body.removeChild(el);\n              setMessage('Encoded message copied to clipboard!');\n              setTimeout(() => setMessage(''), 3000); // Clear message after 3 seconds\n            },\n            className: \"mt-2 w-full bg-green-500 text-white py-2 rounded-md font-medium hover:bg-green-600 transition-colors shadow-md\",\n            children: \"Copy Encoded Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-md text-sm text-blue-800\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-semibold mb-1\",\n              children: \"Key to send to your friend:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"block bg-blue-100 p-2 rounded break-all text-gray-700\",\n              children: cipherType === 'linearShift' ? (parseInt(shiftAmount) || 0).toString() : substitutionMethod === 'keyword' ? JSON.stringify({\n                type: cipherType,\n                keyword: substitutionKeyword\n              }) : JSON.stringify({\n                type: cipherType,\n                inputMap: substitutionMap,\n                outputMap: substitutionMapOutput\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                // Copy the generated key to clipboard\n                const keyToCopy = cipherType === 'linearShift' ? (parseInt(shiftAmount) || 0).toString() : substitutionMethod === 'keyword' ? JSON.stringify({\n                  type: cipherType,\n                  keyword: substitutionKeyword\n                }) : JSON.stringify({\n                  type: cipherType,\n                  inputMap: substitutionMap,\n                  outputMap: substitutionMapOutput\n                });\n                const el = document.createElement('textarea');\n                el.value = keyToCopy;\n                document.body.appendChild(el);\n                el.select();\n                document.execCommand('copy'); // Deprecated but widely supported for iframes\n                document.body.removeChild(el);\n                setMessage('Key copied to clipboard!');\n                setTimeout(() => setMessage(''), 3000);\n              },\n              className: \"mt-2 w-full bg-blue-500 text-white py-1 rounded-md text-xs hover:bg-blue-600 transition-colors\",\n              children: \"Copy Key\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 698,\n    columnNumber: 5\n  }, this);\n}\n_s3(CipherCreator, \"Ckd2SK36Tf47xhN0IAAsLCo5520=\");\n_c3 = CipherCreator;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Dashboard\");\n$RefreshReg$(_c3, \"CipherCreator\");","map":{"version":3,"names":["React","useState","useEffect","initializeApp","getAuth","signInAnonymously","signInWithCustomToken","onAuthStateChanged","GoogleAuthProvider","signInWithPopup","signOut","getFirestore","doc","addDoc","setDoc","deleteDoc","onSnapshot","collection","query","where","getDocs","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentView","setCurrentView","db","setDb","auth","setAuth","userId","setUserId","isAuthReady","setIsAuthReady","appMessage","setAppMessage","isSigningIn","setIsSigningIn","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","app","firestoreDb","firebaseAuth","signInInitial","error","console","unsubscribe","user","uid","log","handleGoogleSignIn","provider","code","window","location","hostname","message","handleSignOut","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","fill","viewBox","d","role","Dashboard","CipherCreator","_c","_s2","ciphers","setCiphers","setMessage","cipherTextMessage","setCipherTextMessage","decodeKey","setDecodeKey","decodedMessage","setDecodedMessage","decodeMessage","setDecodeMessage","hasUniqueChars","str","Set","split","size","length","generateSubstitutionMapFromKeyword","keyword","alphabet","uniqueChars","lowerKeyword","toLowerCase","i","includes","inputMap","outputMap","linearShiftDecode","text","shift","result","char","charCode","charCodeAt","isUpperCase","toUpperCase","shiftedCharCode","String","fromCharCode","substitutionDecode","inputMapLower","outputMapLower","charLower","index","indexOf","originalChar","shiftSubstitutionDecode","deSubstitutedText","deShiftedText","handleDecode","trim","usedInputMap","usedOutputMap","cipherTypeForDecode","parsedKey","JSON","parse","type","parseInt","shiftAmount","generatedMaps","e","numKey","isNaN","ciphersCollectionRef","snapshot","fetchedCiphers","docs","map","id","data","handleDeleteCipher","cipherId","setTimeout","cipher","name","htmlFor","placeholder","value","onChange","target","readOnly","_c2","_s3","cipherName","setCipherName","cipherType","setCipherType","setShiftAmount","substitutionMethod","setSubstitutionMethod","substitutionKeyword","setSubstitutionKeyword","substitutionMap","setSubstitutionMap","substitutionMapOutput","setSubstitutionMapOutput","plainTextMessage","setPlainTextMessage","encodedMessage","setEncodedMessage","linearShiftEncode","substitutionEncode","substitutedChar","shiftSubstitutionEncode","shiftedText","substitutedText","handleEncode","currentInputMap","currentOutputMap","handleSaveCipher","cipherData","createdAt","Date","docRef","min","max","checked","el","document","createElement","body","appendChild","select","execCommand","removeChild","toString","stringify","keyToCopy","_c3","$RefreshReg$"],"sources":["C:/Users/admin/Documents/Shiva project/my-react-firebase-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInAnonymously, signInWithCustomToken, onAuthStateChanged, GoogleAuthProvider, signInWithPopup, signOut } from 'firebase/auth';\nimport { getFirestore, doc, addDoc, setDoc, deleteDoc, onSnapshot, collection, query, where, getDocs } from 'firebase/firestore';\n\n// Main App component\nfunction App() {\n  // State to manage the current view: 'dashboard' or 'cipherCreator'\n  const [currentView, setCurrentView] = useState('dashboard');\n  // State to store Firebase authentication and Firestore instances\n  const [db, setDb] = useState(null);\n  const [auth, setAuth] = useState(null);\n  // State to store the current user's ID (Firebase Auth UID)\n  const [userId, setUserId] = useState(null);\n  // State to indicate if authentication is ready\n  const [isAuthReady, setIsAuthReady] = useState(false);\n  // State for displaying messages to the user (e.g., login errors)\n  const [appMessage, setAppMessage] = useState('');\n  // State to manage if a sign-in process is currently active to prevent multiple popups\n  const [isSigningIn, setIsSigningIn] = useState(false);\n\n  // Initialize Firebase and set up authentication listener\n  useEffect(() => {\n    try {\n      const firebaseConfig = {\n        apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n        authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n        projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n        storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n        messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n        appId: process.env.REACT_APP_FIREBASE_APP_ID,\n      };\n\n      const appId = process.env.REACT_APP_FIREBASE_APP_ID || 'default-app-id';\n\n\n      const app = initializeApp(firebaseConfig);\n      const firestoreDb = getFirestore(app);\n      const firebaseAuth = getAuth(app);\n\n      setDb(firestoreDb);\n      setAuth(firebaseAuth);\n\n      // Attempt initial sign-in: first with custom token (for Canvas), then anonymously\n      const signInInitial = async () => {\n        try {\n          await signInAnonymously(firebaseAuth);\n        } catch (error) {\n          console.error(\"Firebase anonymous sign-in error:\", error);\n        }\n      };\n\n      signInInitial();\n\n      // Set up a listener for authentication state changes\n      const unsubscribe = onAuthStateChanged(firebaseAuth, (user) => {\n        if (user) {\n          setUserId(user.uid);\n          console.log(\"User signed in:\", user.uid);\n        } else {\n          setUserId(null);\n          console.log(\"User signed out.\");\n        }\n        setIsAuthReady(true); // Mark authentication as ready after initial check\n      });\n\n      return () => unsubscribe(); // Cleanup Firebase Auth listener\n    } catch (error) {\n      console.error(\"Error initializing Firebase:\", error);\n      setAppMessage(\"Error initializing Firebase. Please check your console.\");\n      setIsAuthReady(true);\n    }\n  }, []); // Runs only once on mount\n\n  // Function to handle Google Sign-In\n  const handleGoogleSignIn = async () => {\n    if (!auth || isSigningIn) {\n      if (isSigningIn) {\n        setAppMessage(\"Sign-in process already in progress. Please wait or try again.\");\n      } else {\n        setAppMessage(\"Firebase Auth not initialized. Please try again.\");\n      }\n      return;\n    }\n\n    setIsSigningIn(true);\n    setAppMessage('');\n    const provider = new GoogleAuthProvider();\n    try {\n      await signInWithPopup(auth, provider);\n      setAppMessage(\"Successfully signed in with Google!\");\n    } catch (error) {\n      console.error(\"Google Sign-In error:\", error);\n      if (error.code === 'auth/unauthorized-domain') {\n        setAppMessage(`Google Sign-In failed: The domain \"${window.location.hostname}\" is not authorized in your Firebase project. Please add this exact domain in Firebase Console > Authentication > Settings > Authorized domains.`);\n      } else if (error.code === 'auth/cancelled-popup-request') {\n        setAppMessage(\"Sign-in cancelled: You might have closed the popup or clicked the button multiple times. Please click 'Sign in with Google' once.\");\n      } else if (error.code === 'auth/popup-blocked') {\n        setAppMessage(\"Sign-in failed: Popup blocked by your browser. Please allow popups for this site and try again.\");\n      } else {\n        setAppMessage(`Google Sign-In failed: ${error.message}`);\n      }\n    } finally {\n      setIsSigningIn(false);\n    }\n  };\n\n  // Function to handle user Logout\n  const handleSignOut = async () => {\n    if (!auth) return;\n    try {\n      await signOut(auth);\n      setAppMessage(\"Signed out successfully.\");\n      setCurrentView('dashboard');\n    } catch (error) {\n      console.error(\"Sign-out error:\", error);\n      setAppMessage(`Sign-out failed: ${error.message}`);\n    }\n  };\n\n  // Render loading state until Firebase is ready\n  if (!isAuthReady) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n        <div className=\"text-xl text-gray-700\">Loading authentication...</div>\n      </div>\n    );\n  }\n\n  // Main application layout\n  return (\n    <div className=\"min-h-screen bg-gray-100 font-inter\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm p-4 flex justify-between items-center\">\n        <h1 className=\"text-2xl font-bold text-gray-800\">Cipher Creator</h1>\n        <div className=\"flex items-center space-x-4\">\n          {userId ? ( // Show user ID and Logout button if user is logged in\n            <>\n              <span className=\"text-gray-600 text-sm\">User ID: {userId}</span>\n              <button\n                onClick={handleSignOut}\n                className=\"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition-colors\"\n              >\n                Logout\n              </button>\n            </>\n          ) : ( // Show Sign in with Google button if user is not logged in\n            <button\n              onClick={handleGoogleSignIn}\n              disabled={isSigningIn}\n              className={`px-4 py-2 bg-blue-600 text-white rounded-md transition-colors flex items-center space-x-2 ${isSigningIn ? 'opacity-50 cursor-not-allowed' : 'hover:bg-blue-700'}`}\n            >\n              <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path d=\"M22.675 12.0007c0-.623-.054-1.226-.156-1.812h-10.43v3.571h5.908c-.26 1.385-1.04 2.56-2.227 3.354v2.308h2.977c1.748-1.61 2.756-3.987 2.756-6.421z\" fill=\"#4285F4\"></path>\n                <path d=\"M12.245 23.0007c3.153 0 5.8-1.04 7.733-2.834l-2.977-2.308c-.822.544-1.874.869-2.756.869-2.133 0-3.931-1.432-4.588-3.35h-3.085v2.382c1.026 2.02 3.197 3.475 5.673 3.475z\" fill=\"#34A853\"></path>\n                <path d=\"M7.657 14.0007c-.206-.544-.323-1.12-.323-1.724s.117-1.18.323-1.724v-2.382h-3.085c-.68 1.34-1.068 2.87-1.068 4.106s.388 2.766 1.068 4.106l3.085-2.382z\" fill=\"#FBBC05\"></path>\n                <path d=\"M12.245 5.0007c1.728 0 3.297.66 4.516 1.764l2.648-2.648c-1.83-1.706-4.256-2.816-7.164-2.816-2.476 0-4.647 1.455-5.673 3.475l3.085 2.382c.657-1.918 2.455-3.35 4.588-3.35z\" fill=\"#EA4335\"></path>\n              </svg>\n              <span>{isSigningIn ? 'Signing In...' : 'Sign in with Google'}</span>\n            </button>\n          )}\n        </div>\n      </header>\n\n      {/* App-level messages */}\n      {appMessage && (\n        <div className=\"bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded relative mx-auto mt-4 max-w-4xl\" role=\"alert\">\n          <span className=\"block sm:inline\">{appMessage}</span>\n        </div>\n      )}\n\n      {/* Main content area */}\n      <main className=\"container mx-auto p-6\">\n        {userId ? ( // If user is logged in, show Dashboard or CipherCreator\n          currentView === 'dashboard' ? (\n            <Dashboard setCurrentView={setCurrentView} userId={userId} db={db} />\n          ) : (\n            <CipherCreator setCurrentView={setCurrentView} userId={userId} db={db} />\n          )\n        ) : ( // If user is not logged in, show welcome message and Google Sign-In button\n          <div className=\"bg-white p-8 rounded-lg shadow-md max-w-md mx-auto mt-10 text-center\">\n            <h2 className=\"text-2xl font-semibold mb-4 text-gray-800\">Welcome to Cipher Creator!</h2>\n            <p className=\"text-gray-600 mb-6\">Please sign in with your Google account to create and manage your custom ciphers.</p>\n            <button\n              onClick={handleGoogleSignIn}\n              disabled={isSigningIn}\n              className={`px-6 py-3 bg-blue-600 text-white rounded-md text-lg font-medium transition-colors flex items-center justify-center space-x-3 mx-auto shadow-lg ${isSigningIn ? 'opacity-50 cursor-not-allowed' : 'hover:bg-blue-700'}`}\n            >\n              <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path d=\"M22.675 12.0007c0-.623-.054-1.226-.156-1.812h-10.43v3.571h5.908c-.26 1.385-1.04 2.56-2.227 3.354v2.308h2.977c1.748-1.61 2.756-3.987 2.756-6.421z\" fill=\"#4285F4\"></path>\n                <path d=\"M12.245 23.0007c3.153 0 5.8-1.04 7.733-2.834l-2.977-2.308c-.822.544-1.874.869-2.756.869-2.133 0-3.931-1.432-4.588-3.35h-3.085v2.382c1.026 2.02 3.197 3.475 5.673 3.475z\" fill=\"#34A853\"></path>\n                <path d=\"M7.657 14.0007c-.206-.544-.323-1.12-.323-1.724s.117-1.18.323-1.724v-2.382h-3.085c-.68 1.34-1.068 2.87-1.068 4.106s.388 2.766 1.068 4.106l3.085-2.382z\" fill=\"#FBBC05\"></path>\n                <path d=\"M12.245 5.0007c1.728 0 3.297.66 4.516 1.764l2.648-2.648c-1.83-1.706-4.256-2.816-7.164-2.816-2.476 0-4.647 1.455-5.673 3.475l3.085 2.382c.657-1.918 2.455-3.35 4.588-3.35z\" fill=\"#EA4335\"></path>\n              </svg>\n              <span>{isSigningIn ? 'Signing In...' : 'Sign in with Google'}</span>\n            </button>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\n// Dashboard Component: Displays a list of user's saved ciphers\nfunction Dashboard({ setCurrentView, userId, db }) {\n  const [ciphers, setCiphers] = useState([]);\n  const [message, setMessage] = useState(''); // For user messages like \"Cipher saved!\" or \"Cipher deleted!\"\n\n  // States for decoding messages (moved from CipherCreator)\n  const [cipherTextMessage, setCipherTextMessage] = useState('');\n  const [decodeKey, setDecodeKey] = useState('');\n  const [decodedMessage, setDecodedMessage] = useState('');\n  const [decodeMessage, setDecodeMessage] = useState(''); // Separate message for decode section\n\n  // Helper function to check if a string contains only unique characters\n  const hasUniqueChars = (str) => {\n    return new Set(str.split('')).size === str.length;\n  };\n\n  // Function to generate a substitution map from a keyword (moved from CipherCreator)\n  const generateSubstitutionMapFromKeyword = (keyword) => {\n    const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    let uniqueChars = '';\n    const lowerKeyword = keyword.toLowerCase();\n\n    for (let i = 0; i < lowerKeyword.length; i++) {\n      if (alphabet.includes(lowerKeyword[i]) && !uniqueChars.includes(lowerKeyword[i])) {\n        uniqueChars += lowerKeyword[i];\n      }\n    }\n\n    for (let i = 0; i < alphabet.length; i++) {\n      if (!uniqueChars.includes(alphabet[i])) {\n        uniqueChars += alphabet[i];\n      }\n    }\n    return { inputMap: alphabet, outputMap: uniqueChars };\n  };\n\n  // Linear Shift (Caesar Cipher) decoding logic (moved from CipherCreator)\n  const linearShiftDecode = (text, shift) => {\n    let result = '';\n    for (let i = 0; i < text.length; i++) {\n      const char = text[i];\n      const charCode = char.toLowerCase().charCodeAt(0);\n      if (charCode >= 97 && charCode <= 122) {\n        const isUpperCase = char === char.toUpperCase();\n        let shiftedCharCode = ((charCode - 97 - shift + 26 * 2) % 26) + 97; // +26*2 to handle negative results\n        result += isUpperCase ? String.fromCharCode(shiftedCharCode).toUpperCase() : String.fromCharCode(shiftedCharCode);\n      } else {\n        result += char;\n      }\n    }\n    return result;\n  };\n\n  // Substitution Cipher decoding logic (moved from CipherCreator)\n  const substitutionDecode = (text, inputMap, outputMap) => {\n    if (inputMap.length !== outputMap.length || !hasUniqueChars(inputMap) || !hasUniqueChars(outputMap)) {\n      setDecodeMessage(\"Substitution map is invalid for decoding. Input and output maps must have the same length and contain only unique characters.\");\n      return \"\";\n    }\n\n    const inputMapLower = inputMap.toLowerCase();\n    const outputMapLower = outputMap.toLowerCase();\n    let result = '';\n\n    for (let i = 0; i < text.length; i++) {\n      const char = text[i];\n      const charLower = char.toLowerCase();\n      const index = outputMapLower.indexOf(charLower);\n\n      if (index !== -1) {\n        const originalChar = inputMapLower[index];\n        result += (char === char.toUpperCase()) ? originalChar.toUpperCase() : originalChar;\n      } else {\n        result += char;\n      }\n    }\n    return result;\n  };\n\n  // Shift + Substitution Cipher decoding logic (moved from CipherCreator)\n  const shiftSubstitutionDecode = (text, shift, inputMap, outputMap) => {\n    const deSubstitutedText = substitutionDecode(text, inputMap, outputMap);\n    if (!deSubstitutedText) return \"\"; // Propagate error from substitutionDecode\n    const deShiftedText = linearShiftDecode(deSubstitutedText, shift);\n    return deShiftedText;\n  };\n\n  // Handles decoding a message based on the provided key and selected cipher type\n  const handleDecode = () => {\n    if (cipherTextMessage.trim() === '' || decodeKey.trim() === '') {\n      setDecodeMessage('Please enter both the encoded message and the key to decode.');\n      return;\n    }\n    setDecodeMessage(''); // Clear previous messages\n    let result = '';\n    let usedInputMap = '';\n    let usedOutputMap = '';\n    let cipherTypeForDecode = ''; // To determine which decode logic to use\n\n    try {\n      const parsedKey = JSON.parse(decodeKey);\n\n      cipherTypeForDecode = parsedKey.type;\n\n      if (parsedKey.type === 'linearShift') {\n        result = linearShiftDecode(cipherTextMessage, parseInt(parsedKey.shiftAmount) || 0);\n      } else if (parsedKey.type === 'substitution' || parsedKey.type === 'shiftSubstitution') {\n        if (parsedKey.keyword) {\n          const generatedMaps = generateSubstitutionMapFromKeyword(parsedKey.keyword);\n          usedInputMap = generatedMaps.inputMap;\n          usedOutputMap = generatedMaps.outputMap;\n        } else if (parsedKey.inputMap && parsedKey.outputMap) {\n          usedInputMap = parsedKey.inputMap;\n          usedOutputMap = parsedKey.outputMap;\n        } else {\n          setDecodeMessage(\"Invalid decode key for substitution/shift+substitution. Missing keyword or map data.\");\n          return;\n        }\n\n        if (parsedKey.type === 'substitution') {\n          result = substitutionDecode(cipherTextMessage, usedInputMap, usedOutputMap);\n        } else { // shiftSubstitution\n          result = shiftSubstitutionDecode(cipherTextMessage, parseInt(parsedKey.shiftAmount) || 0, usedInputMap, usedOutputMap);\n        }\n      } else {\n        setDecodeMessage(\"Invalid decode key format or type. Key must be a valid JSON object matching the cipher type.\");\n        return;\n      }\n    } catch (e) {\n      // If JSON parsing fails, try to interpret the key as a simple number for linear shift\n      const numKey = parseInt(decodeKey);\n      // If a simple number is provided, assume linear shift\n      if (!isNaN(numKey)) {\n        result = linearShiftDecode(cipherTextMessage, numKey);\n      } else {\n        setDecodeMessage(\"Invalid decode key. Ensure it matches the cipher type (e.g., a number for Linear Shift, or a full JSON for Substitution/Shift+Substitution).\");\n        return;\n      }\n    }\n    setDecodedMessage(result);\n  };\n\n  // Effect hook to fetch ciphers from Firestore in real-time\n  useEffect(() => {\n    // Only proceed if db and userId are available\n    if (!db || !userId) return;\n\n    // Define the collection path for private user data in Firestore\n    // This path adheres to Firebase security rules for user-specific data: /artifacts/{appId}/users/{userId}/ciphers\n    const appId = process.env.REACT_APP_FIREBASE_APP_ID || 'default-app-id';\n\n    const ciphersCollectionRef = collection(db, `artifacts/${appId}/users/${userId}/ciphers`);\n\n    // Set up a real-time listener using onSnapshot\n    const unsubscribe = onSnapshot(ciphersCollectionRef, (snapshot) => {\n      const fetchedCiphers = snapshot.docs.map(doc => ({\n        id: doc.id, // Document ID\n        ...doc.data() // All other fields in the document\n      }));\n      setCiphers(fetchedCiphers); // Update state with fetched ciphers\n      console.log(\"Fetched ciphers:\", fetchedCiphers);\n    }, (error) => {\n      console.error(\"Error fetching ciphers:\", error);\n      setMessage(\"Error loading ciphers. Please try refreshing.\");\n    });\n\n    // Cleanup function: unsubscribe from the real-time listener when the component unmounts\n    return () => unsubscribe();\n  }, [db, userId]); // Effect re-runs if db or userId changes\n\n  // Function to handle deleting a cipher from Firestore\n  const handleDeleteCipher = async (cipherId) => {\n    if (!db || !userId) return; // Ensure db and userId are available\n    try {\n      const appId = process.env.REACT_APP_FIREBASE_APP_ID || 'default-app-id';\n\n      // Delete the specific document from the user's ciphers collection\n      await deleteDoc(doc(db, `artifacts/${appId}/users/${userId}/ciphers`, cipherId));\n      setMessage('Cipher deleted successfully!');\n      setTimeout(() => setMessage(''), 3000); // Clear the message after 3 seconds\n    } catch (error) {\n      console.error(\"Error deleting cipher:\", error);\n      setMessage('Failed to delete cipher. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"bg-white p-8 rounded-lg shadow-md max-w-4xl mx-auto\"> {/* Increased max-w to accommodate decode section */}\n      <h2 className=\"text-3xl font-semibold mb-6 text-gray-800 text-center\">Your Ciphers</h2>\n\n      {message && ( // Display messages to the user (for general dashboard actions)\n        <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\n          <span className=\"block sm:inline\">{message}</span>\n        </div>\n      )}\n\n      {/* Button to navigate to the Cipher Creator page */}\n      <button\n        onClick={() => setCurrentView('cipherCreator')}\n        className=\"w-full bg-blue-600 text-white py-3 rounded-md text-lg font-medium hover:bg-blue-700 transition-colors shadow-lg mb-8\"\n      >\n        Create New Cipher\n      </button>\n\n      {/* Display list of saved ciphers or a message if none exist */}\n      {ciphers.length === 0 ? (\n        <p className=\"text-center text-gray-500 text-lg mb-8\">You haven't created any ciphers yet.</p>\n      ) : (\n        <div className=\"space-y-4 mb-8\">\n          {ciphers.map((cipher) => (\n            <div\n              key={cipher.id}\n              className=\"flex justify-between items-center bg-gray-50 p-4 rounded-md border border-gray-200 shadow-sm\"\n            >\n              <div>\n                <h3 className=\"text-xl font-medium text-gray-800\">{cipher.name || 'Unnamed Cipher'}</h3>\n                <p className=\"text-gray-600 text-sm\">Type: {cipher.type}</p>\n              </div>\n              <div className=\"flex space-x-2\">\n                {/* Button to use/edit a cipher (currently just logs, but could load into creator) */}\n                <button\n                  onClick={() => {\n                    console.log(`Using cipher: ${cipher.name}`);\n                    // Ideally, this would load the cipher's configuration into the CipherCreator page\n                    setCurrentView('cipherCreator');\n                  }}\n                  className=\"px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 transition-colors text-sm\"\n                >\n                  Use/Edit\n                </button>\n                {/* Button to delete a cipher */}\n                <button\n                  onClick={() => handleDeleteCipher(cipher.id)}\n                  className=\"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition-colors text-sm\"\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Section for decoding messages (MOVED HERE) */}\n      <div className=\"p-6 border border-gray-200 rounded-lg\">\n        <h3 className=\"text-2xl font-medium mb-4 text-gray-700\">Decode Message</h3>\n        {decodeMessage && ( // Display messages specific to decode section\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\n            <span className=\"block sm:inline\">{decodeMessage}</span>\n          </div>\n        )}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label htmlFor=\"cipherTextMessage\" className=\"block text-gray-700 text-sm font-bold mb-2\">Ciphered Message:</label>\n            <textarea\n              id=\"cipherTextMessage\"\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline h-32 resize-y\"\n              placeholder=\"Paste the encoded message here...\"\n              value={cipherTextMessage}\n              onChange={(e) => setCipherTextMessage(e.target.value)}\n            ></textarea>\n            <label htmlFor=\"decodeKey\" className=\"block text-gray-700 text-sm font-bold mb-2 mt-4\">Key:</label>\n            <input\n              type=\"text\"\n              id=\"decodeKey\"\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              placeholder=\"Paste the key provided by your friend (e.g., 3 or {'type':'substitution', 'keyword':'SECRET'})\"\n              value={decodeKey}\n              onChange={(e) => setDecodeKey(e.target.value)}\n            />\n            <button\n              onClick={handleDecode}\n              className=\"mt-4 w-full bg-green-600 text-white py-2 rounded-md font-medium hover:bg-green-700 transition-colors shadow-md\"\n            >\n              Decode Message\n            </button>\n          </div>\n          <div>\n            <label htmlFor=\"decodedMessage\" className=\"block text-gray-700 text-sm font-bold mb-2\">Decoded Message:</label>\n            <textarea\n              id=\"decodedMessage\"\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline h-32 bg-gray-50 resize-y\"\n              readOnly\n              value={decodedMessage}\n            ></textarea>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Cipher Creator Component: Allows users to define, encode, and decode ciphers\nfunction CipherCreator({ setCurrentView, userId, db }) {\n  // State for defining the cipher\n  const [cipherName, setCipherName] = useState('');\n  const [cipherType, setCipherType] = useState('linearShift'); // Default cipher type\n  const [shiftAmount, setShiftAmount] = useState(3); // Default shift for linear shift\n  const [substitutionMethod, setSubstitutionMethod] = useState('manual'); // 'manual' or 'keyword'\n  const [substitutionKeyword, setSubstitutionKeyword] = useState('secret'); // Default keyword\n  const [substitutionMap, setSubstitutionMap] = useState('abcdefghijklmnopqrstuvwxyz'); // Default input map for manual substitution\n  const [substitutionMapOutput, setSubstitutionMapOutput] = useState('zyxwuvtsrqponmlkjihgfedcba'); // Default output map for manual substitution\n\n  // State for encoding messages (decode states removed)\n  const [plainTextMessage, setPlainTextMessage] = useState('');\n  const [encodedMessage, setEncodedMessage] = useState('');\n  const [message, setMessage] = useState(''); // General messages to the user (e.g., validation errors)\n\n  // --- Cipher Logic Functions ---\n\n  // Helper function to check if a string contains only unique characters\n  const hasUniqueChars = (str) => {\n    return new Set(str.split('')).size === str.length;\n  };\n\n  // Function to generate a substitution map from a keyword\n  const generateSubstitutionMapFromKeyword = (keyword) => {\n    const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    let uniqueChars = '';\n    const lowerKeyword = keyword.toLowerCase();\n\n    // Add unique characters from the keyword first\n    for (let i = 0; i < lowerKeyword.length; i++) {\n      if (alphabet.includes(lowerKeyword[i]) && !uniqueChars.includes(lowerKeyword[i])) {\n        uniqueChars += lowerKeyword[i];\n      }\n    }\n\n    // Add remaining unique characters from the alphabet\n    for (let i = 0; i < alphabet.length; i++) {\n      if (!uniqueChars.includes(alphabet[i])) {\n        uniqueChars += alphabet[i];\n      }\n    }\n\n    // The input map is the standard alphabet\n    const inputMap = alphabet;\n    // The output map is the generated uniqueChars string\n    const outputMap = uniqueChars;\n\n    return { inputMap, outputMap };\n  };\n\n  // Linear Shift (Caesar Cipher) encoding logic\n  const linearShiftEncode = (text, shift) => {\n    let result = '';\n    for (let i = 0; i < text.length; i++) {\n      const char = text[i];\n      const charCode = char.toLowerCase().charCodeAt(0);\n      // Only shift lowercase letters (ASCII 97-122), preserve original case\n      if (charCode >= 97 && charCode <= 122) {\n        const isUpperCase = char === char.toUpperCase();\n        let shiftedCharCode = ((charCode - 97 + shift) % 26) + 97;\n        result += isUpperCase ? String.fromCharCode(shiftedCharCode).toUpperCase() : String.fromCharCode(shiftedCharCode);\n      } else {\n        result += char; // Keep non-alphabetic characters as is\n      }\n    }\n    return result;\n  };\n\n  // Substitution Cipher encoding logic\n  const substitutionEncode = (text, inputMap, outputMap) => {\n    // Validates substitution maps\n    if (inputMap.length !== outputMap.length || !hasUniqueChars(inputMap) || !hasUniqueChars(outputMap)) {\n      setMessage(\"Substitution map is invalid. Input and output maps must have the same length and contain only unique characters.\");\n      return \"\";\n    }\n\n    const inputMapLower = inputMap.toLowerCase();\n    const outputMapLower = outputMap.toLowerCase();\n    let result = '';\n\n    for (let i = 0; i < text.length; i++) {\n      const char = text[i];\n      const charLower = char.toLowerCase();\n      const index = inputMapLower.indexOf(charLower); // Find character in input map\n\n      if (index !== -1) {\n        // If found, substitute with corresponding character from output map, preserving original case\n        const substitutedChar = outputMapLower[index];\n        result += (char === char.toUpperCase()) ? substitutedChar.toUpperCase() : substitutedChar;\n      } else {\n        result += char; // Keep character as is if not in map\n      }\n    }\n    return result;\n  };\n\n  // Shift + Substitution Cipher encoding logic (combines both)\n  const shiftSubstitutionEncode = (text, shift, inputMap, outputMap) => {\n    // 1. Apply Linear Shift first\n    const shiftedText = linearShiftEncode(text, shift);\n    // 2. Then apply Substitution to the shifted text\n    const substitutedText = substitutionEncode(shiftedText, inputMap, outputMap);\n    return substitutedText;\n  };\n\n  // --- Event Handlers ---\n\n  // Handles encoding a message based on the selected cipher type\n  const handleEncode = () => {\n    if (plainTextMessage.trim() === '') {\n      setMessage('Please enter a message to encode.');\n      return;\n    }\n    setMessage(''); // Clear previous messages\n    let result = '';\n    let currentInputMap = substitutionMap;\n    let currentOutputMap = substitutionMapOutput;\n\n    // If keyword-based substitution, generate maps from keyword\n    if ((cipherType === 'substitution' || cipherType === 'shiftSubstitution') && substitutionMethod === 'keyword') {\n      if (substitutionKeyword.trim() === '') {\n        setMessage('Please enter a keyword for substitution.');\n        return;\n      }\n      const generatedMaps = generateSubstitutionMapFromKeyword(substitutionKeyword);\n      currentInputMap = generatedMaps.inputMap;\n      currentOutputMap = generatedMaps.outputMap;\n    }\n\n    if (cipherType === 'linearShift') {\n      result = linearShiftEncode(plainTextMessage, parseInt(shiftAmount) || 0);\n    } else if (cipherType === 'substitution') {\n      result = substitutionEncode(plainTextMessage, currentInputMap, currentOutputMap);\n    } else if (cipherType === 'shiftSubstitution') {\n      result = shiftSubstitutionEncode(plainTextMessage, parseInt(shiftAmount) || 0, currentInputMap, currentOutputMap);\n    }\n    setEncodedMessage(result); // Update the encoded message state\n  };\n\n  // Handles saving the current cipher definition to Firestore\n  const handleSaveCipher = async () => {\n    // Ensure Firebase and user are ready for saving\n    if (!db || !userId) {\n      setMessage(\"Authentication not ready or user not logged in. Cannot save cipher.\");\n      return;\n    }\n    if (cipherName.trim() === '') {\n      setMessage(\"Please give your cipher a name before saving.\");\n      return;\n    }\n\n    // Prepare cipher data object based on the selected cipher type\n    const cipherData = {\n      name: cipherName,\n      type: cipherType,\n      createdAt: new Date(), // Timestamp for when the cipher was created\n      userId: userId, // Store the user ID to link cipher to the user\n    };\n\n    if (cipherType === 'linearShift') {\n      cipherData.shiftAmount = parseInt(shiftAmount) || 0;\n    } else if (cipherType === 'substitution' || cipherType === 'shiftSubstitution') {\n      cipherData.substitutionMethod = substitutionMethod; // Save the method used\n\n      if (substitutionMethod === 'keyword') {\n        if (substitutionKeyword.trim() === '') {\n          setMessage('Please enter a keyword for substitution.');\n          return;\n        }\n        cipherData.keyword = substitutionKeyword; // Save the keyword\n      } else { // manual\n        // Validate manual substitution maps\n        if (substitutionMap.length === 0 || substitutionMap.length !== substitutionMapOutput.length || !hasUniqueChars(substitutionMap) || !hasUniqueChars(substitutionMapOutput)) {\n          setMessage(\"Manual Substitution map is invalid. Input and output maps must have the same length and contain only unique characters.\");\n          return;\n        }\n        cipherData.inputMap = substitutionMap;\n        cipherData.outputMap = substitutionMapOutput;\n      }\n\n      if (cipherType === 'shiftSubstitution') {\n        cipherData.shiftAmount = parseInt(shiftAmount) || 0;\n      }\n    }\n\n    try {\n      // Get the app ID for the Firestore path\n      const appId = process.env.REACT_APP_FIREBASE_APP_ID || 'default-app-id';\n\n      // Add the cipher data as a new document to the user's specific collection in Firestore\n      const docRef = await addDoc(collection(db, `artifacts/${appId}/users/${userId}/ciphers`), cipherData);\n      setMessage(`Cipher \"${cipherName}\" saved successfully with ID: ${docRef.id}`);\n      setCipherName(''); // Clear the cipher name input field after saving\n      setTimeout(() => setMessage(''), 3000); // Clear the message after 3 seconds\n    } catch (error) {\n      console.error(\"Error saving cipher:\", error);\n      setMessage(\"Failed to save cipher. Please check your internet connection or Firebase rules.\");\n    }\n  };\n\n  return (\n    <div className=\"bg-white p-8 rounded-lg shadow-md max-w-4xl mx-auto\">\n      <h2 className=\"text-3xl font-semibold mb-6 text-gray-800 text-center\">Cipher Creator</h2>\n\n      {message && ( // Display general messages/errors to the user\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\n          <span className=\"block sm:inline\">{message}</span>\n        </div>\n      )}\n\n      {/* Button to navigate back to the Dashboard */}\n      <button\n        onClick={() => setCurrentView('dashboard')}\n        className=\"px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors mb-6\"\n      >\n        &larr; Back to Dashboard\n      </button>\n\n      {/* Section for defining a new cipher */}\n      <div className=\"mb-8 p-6 border border-gray-200 rounded-lg\">\n        <h3 className=\"text-2xl font-medium mb-4 text-gray-700\">Define Your Cipher</h3>\n\n        {/* Input for Cipher Name */}\n        <div className=\"mb-4\">\n          <label htmlFor=\"cipherName\" className=\"block text-gray-700 text-sm font-bold mb-2\">Cipher Name:</label>\n          <input\n            type=\"text\"\n            id=\"cipherName\"\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            placeholder=\"e.g., My Secret Shift\"\n            value={cipherName}\n            onChange={(e) => setCipherName(e.target.value)}\n          />\n        </div>\n\n        {/* Dropdown for Cipher Type Selection */}\n        <div className=\"mb-4\">\n          <label htmlFor=\"cipherType\" className=\"block text-gray-700 text-sm font-bold mb-2\">Cipher Type:</label>\n          <select\n            id=\"cipherType\"\n            className=\"shadow border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            value={cipherType}\n            onChange={(e) => setCipherType(e.target.value)}\n          >\n            <option value=\"linearShift\">Linear Shift (Caesar)</option>\n            <option value=\"substitution\">Substitution</option>\n            <option value=\"shiftSubstitution\">Shift + Substitution</option>\n          </select>\n        </div>\n\n        {/* Conditional inputs based on selected Cipher Type */}\n        {(cipherType === 'linearShift' || cipherType === 'shiftSubstitution') && (\n          <div className=\"mb-4\">\n            <label htmlFor=\"shiftAmount\" className=\"block text-gray-700 text-sm font-bold mb-2\">Shift Amount (0-25):</label>\n            <input\n              type=\"number\"\n              id=\"shiftAmount\"\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              min=\"0\"\n              max=\"25\"\n              value={shiftAmount}\n              onChange={(e) => {\n                const value = e.target.value;\n                // Allow empty string for clearing input, otherwise parse to int or default to 0\n                setShiftAmount(value === '' ? '' : parseInt(value) || 0);\n              }}\n            />\n            <p className=\"text-xs text-gray-500 mt-1\">e.g., 3 for a Caesar cipher (A becomes D)</p>\n          </div>\n        )}\n\n        {(cipherType === 'substitution' || cipherType === 'shiftSubstitution') && (\n          <>\n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">Substitution Method:</label>\n              <div className=\"flex items-center space-x-4\">\n                <label className=\"inline-flex items-center\">\n                  <input\n                    type=\"radio\"\n                    className=\"form-radio\"\n                    name=\"substitutionMethod\"\n                    value=\"manual\"\n                    checked={substitutionMethod === 'manual'}\n                    onChange={() => setSubstitutionMethod('manual')}\n                  />\n                  <span className=\"ml-2 text-gray-700\">Manual Map</span>\n                </label>\n                <label className=\"inline-flex items-center\">\n                  <input\n                    type=\"radio\"\n                    className=\"form-radio\"\n                    name=\"substitutionMethod\"\n                    value=\"keyword\"\n                    checked={substitutionMethod === 'keyword'}\n                    onChange={() => setSubstitutionMethod('keyword')}\n                  />\n                  <span className=\"ml-2 text-gray-700\">Keyword Based</span>\n                </label>\n              </div>\n            </div>\n\n            {substitutionMethod === 'manual' ? (\n              <>\n                <div className=\"mb-4\">\n                  <label htmlFor=\"substitutionMapInput\" className=\"block text-gray-700 text-sm font-bold mb-2\">Input Alphabet (any unique characters):</label>\n                  <input\n                    type=\"text\"\n                    id=\"substitutionMapInput\"\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                    value={substitutionMap}\n                    onChange={(e) => setSubstitutionMap(e.target.value)}\n                    placeholder=\"e.g., abcdefghijklmnopqrstuvwxyz\"\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">Paste any unique characters to define your input alphabet.</p>\n                </div>\n                <div className=\"mb-4\">\n                  <label htmlFor=\"substitutionMapOutput\" className=\"block text-gray-700 text-sm font-bold mb-2\">Output Alphabet (unique characters, corresponding to input):</label>\n                  <input\n                    type=\"text\"\n                    id=\"substitutionMapOutput\"\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                    value={substitutionMapOutput}\n                    onChange={(e) => setSubstitutionMapOutput(e.target.value)}\n                    placeholder=\"e.g., zyxwvutsrqponmlkjihgfedcba\"\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">Paste unique characters that map one-to-one with the input alphabet.</p>\n                </div>\n              </>\n            ) : ( // Keyword Based\n              <div className=\"mb-4\">\n                <label htmlFor=\"substitutionKeyword\" className=\"block text-gray-700 text-sm font-bold mb-2\">Substitution Keyword:</label>\n                <input\n                  type=\"text\"\n                  id=\"substitutionKeyword\"\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  value={substitutionKeyword}\n                  onChange={(e) => setSubstitutionKeyword(e.target.value)}\n                  placeholder=\"e.g., SECRETWORD\"\n                />\n                <p className=\"text-xs text-gray-500 mt-1\">A keyword will be used to generate the substitution alphabet.</p>\n              </div>\n            )}\n          </>\n        )}\n\n        {/* Button to save the defined cipher to Firestore */}\n        <button\n          onClick={handleSaveCipher}\n          className=\"w-full bg-purple-600 text-white py-2 rounded-md font-medium hover:bg-purple-700 transition-colors shadow-md\"\n        >\n          Save Cipher\n        </button>\n      </div>\n\n      {/* Section for encoding messages */}\n      <div className=\"mb-8 p-6 border border-gray-200 rounded-lg\">\n        <h3 className=\"text-2xl font-medium mb-4 text-gray-700\">Encode Message</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label htmlFor=\"plainTextMessage\" className=\"block text-gray-700 text-sm font-bold mb-2\">Plain English Message:</label>\n            <textarea\n              id=\"plainTextMessage\"\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline h-32 resize-y\"\n              placeholder=\"Type your message here...\"\n              value={plainTextMessage}\n              onChange={(e) => setPlainTextMessage(e.target.value)}\n            ></textarea>\n            <button\n              onClick={handleEncode}\n              className=\"mt-4 w-full bg-blue-600 text-white py-2 rounded-md font-medium hover:bg-blue-700 transition-colors shadow-md\"\n            >\n              Encode Message\n            </button>\n          </div>\n          <div>\n            <label htmlFor=\"encodedMessage\" className=\"block text-gray-700 text-sm font-bold mb-2\">Encoded Message:</label>\n            <textarea\n              id=\"encodedMessage\"\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline h-32 bg-gray-50 resize-y\"\n              readOnly\n              value={encodedMessage}\n            ></textarea>\n            {encodedMessage && (\n              <button\n                onClick={() => {\n                  // Copy encoded message to clipboard\n                  const el = document.createElement('textarea');\n                  el.value = encodedMessage;\n                  document.body.appendChild(el);\n                  el.select();\n                  document.execCommand('copy'); // Deprecated but widely supported for iframes\n                  document.body.removeChild(el);\n                  setMessage('Encoded message copied to clipboard!');\n                  setTimeout(() => setMessage(''), 3000); // Clear message after 3 seconds\n                }}\n                className=\"mt-2 w-full bg-green-500 text-white py-2 rounded-md font-medium hover:bg-green-600 transition-colors shadow-md\"\n              >\n                Copy Encoded Message\n              </button>\n            )}\n            {/* Display the key for sharing with others */}\n            <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-md text-sm text-blue-800\">\n              <p className=\"font-semibold mb-1\">Key to send to your friend:</p>\n              <code className=\"block bg-blue-100 p-2 rounded break-all text-gray-700\">\n                {/* Dynamically generate key based on cipher type and substitution method */}\n                {cipherType === 'linearShift' ?\n                  (parseInt(shiftAmount) || 0).toString() :\n                  (substitutionMethod === 'keyword' ?\n                    JSON.stringify({ type: cipherType, keyword: substitutionKeyword }) :\n                    JSON.stringify({ type: cipherType, inputMap: substitutionMap, outputMap: substitutionMapOutput }))\n                }\n              </code>\n              <button\n                onClick={() => {\n                  // Copy the generated key to clipboard\n                  const keyToCopy = cipherType === 'linearShift' ?\n                    (parseInt(shiftAmount) || 0).toString() :\n                    (substitutionMethod === 'keyword' ?\n                      JSON.stringify({ type: cipherType, keyword: substitutionKeyword }) :\n                      JSON.stringify({ type: cipherType, inputMap: substitutionMap, outputMap: substitutionMapOutput }));\n                  const el = document.createElement('textarea');\n                  el.value = keyToCopy;\n                  document.body.appendChild(el);\n                  el.select();\n                  document.execCommand('copy'); // Deprecated but widely supported for iframes\n                  document.body.removeChild(el);\n                  setMessage('Key copied to clipboard!');\n                  setTimeout(() => setMessage(''), 3000);\n                }}\n                className=\"mt-2 w-full bg-blue-500 text-white py-1 rounded-md text-xs hover:bg-blue-600 transition-colors\"\n              >\n                Copy Key\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}